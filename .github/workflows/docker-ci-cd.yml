name: Docker CI/CD Pipeline

on:
  push:
    branches:
      - main  # Esto ejecutará el pipeline cuando se haga un push a la rama principal
  pull_request:
    branches:
      - main  # También se ejecutará en los PRs hacia la rama principal

jobs:
  # Job para construir las imágenes Docker
  build:
    runs-on: ubuntu-latest
    services:
      docker:
        image: docker:20.10.16
        options: --privileged
        ports:
          - 5432:5432
          - 7878:7878
          - 5173:80
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker images
        run: |
          docker build -t backend-image ./backend
          docker build -t frontend-image ./frontend
          docker build -t db-image ./db

  # Job para desplegar los contenedores en la red
  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Deploy containers
        run: |
          docker network create conex || true  # Crear red si no existe
          docker run -d --name db --network conex -p 5432:5432 db-image  # Desplegar la base de datos
          docker run -d --name backend --network conex -p 7878:7878 backend-image  # Desplegar el backend
          docker run -d --name frontend --network conex -p 5173:80 frontend-image  # Desplegar el frontend

      - name: Notify deployment success
        run: echo "Deployment completed successfully!"

